Sample_2
data.sample <- sample(x = nrow(iris), size = 30)
data.sample
data.sample
data.sample
data.sample <- sample(x = nrow(iris), size = 30)
data.sample
data.sample <- sample(x = nrow(iris), size = 30)
data.sample
data.sample3 <- sample(x = nrow(iris), size = 30)
data.sample <- sample(x = nrow(iris), size = 30)
data.sample2 <- sample(x = nrow(iris), size = 30)
data.sample3 <- sample(x = nrow(iris), size = 30)
data.sample4 <- sample(x = nrow(iris), size = 30)
data.sample5 <- sample(x = nrow(iris), size = 30)
data.sample6 <- sample(x = nrow(iris), size = 30)
data.sample7 <- sample(x = nrow(iris), size = 30)
data.sample8 <- sample(x = nrow(iris), size = 30)
data.sample9 <- sample(x = nrow(iris), size = 30)
data.sample10 <- sample(x = nrow(iris), size = 30)
Sample_1 <- data[data.sample, 2]
mean(Sample_1)
Sample_2 <- data[data.sample2, 2]
mean(Sample_2)
Sample_2 <- data[data.sample3, 2]
mean(Sample_2)
mean(Sample_2)
Sample_2 <- data[data.sample4, 2]
mean(Sample_2)
Sample_2 <- data[data.sample5, 2]
mean(Sample_2)
Sample_2 <- data[data.sample6, 2]
mean(Sample_2)
Sample_2 <- data[data.sample7, 2]
mean(Sample_2)
Sample_2 <- data[data.sample8, 2]
mean(Sample_2)
mean(Sample_2)
mean(Sample_2)
mean(Sample_2)
Sample_2 <- data[data.sample9, 2]
mean(Sample_2)
data
Sample_2 <- data[data.sample9, 0]
mean(Sample_2)
Sample_2 <- data[data.sample9, 1]
mean(Sample_2)
str(data)
Sample_2 <- data[data.sample1, 1]
Sample_2 <- data[data.sample, 1]
mean(Sample_2)
Sample_2 <- data[data.sample, 2]
mean(Sample_2)
Sample_2 <- data[data.sample2, 1]
mean(Sample_2)
Sample_2 <- data[data.sample3, 1]
mean(Sample_2)
install.packages("boot")
OperacionSQL
Operacion_SQL <- read.csv("~/Documents/BEDU_Data_Analyst/Modulo_2_WebApp/Operacion_SQL.csv")
View(Operacion_SQL)
OperacionSQL
Operacion_SQL
OperacionSQL <- read.csv('Operacion_SQL.csv')
getwd()
setwd('documents/BEDU_Data_Analyst/Modulo_2_WebApp')
OperacionSQL <- read.csv('Operacion_SQL.csv')
OperacionSQL$Total <- c(OperacionSQL$Quantity * OperacionSQL$UnitPrice)
Operacion_SQL
OperacionSQL
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(P) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Pais = mfv(Pais_de_Origen),
Clientes_atendidos = n_distinct(Cliente)) %>%
arrange(desc(Clientes_atendidos))
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Proveedor) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Pais = mfv(Pais_de_Origen),
Clientes_atendidos = n_distinct(Cliente)) %>%
arrange(desc(Clientes_atendidos))
library(ggplot2)
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Proveedor) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Pais = mfv(Pais_de_Origen),
Clientes_atendidos = n_distinct(Cliente)) %>%
arrange(desc(Clientes_atendidos))
library(dplyr)
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Proveedor) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Pais = mfv(Pais_de_Origen),
Clientes_atendidos = n_distinct(Cliente)) %>%
arrange(desc(Clientes_atendidos))
library(modeest)
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Proveedor) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Pais = mfv(Pais_de_Origen),
Clientes_atendidos = n_distinct(Cliente)) %>%
arrange(desc(Clientes_atendidos))
Operacion_SQL
OperacionSQL.Proveedor
max.Print(OperacionSQL.Proveedor)
max.print(OperacionSQL.Proveedor)
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Id = n_distinct()) %>%
arrange(desc(Clientes_atendidos))
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta)) %>%
arrange(desc(CImportadores))
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta)) %>%
arrange(desc(CImportadores))
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta))
%>%
arrange(desc(CImportadores))
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta)) %>%
arrange(desc(Importadores))
OperacionSQL.Proveedor
str(Operacion_SQL)
unique(Operacion_SQL$Pais_Venta)
OperacionSQL.Proveedor
unique(Operacion_SQL$ProductName)
OperacionSQL.Clientes <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Importadores))
OperacionSQL.Clientes
write.csv(Operacion_SQL, file = 'OperacionSQL')
write.csv(Operacion_SQL, file = 'OperacionSQL.Clientes')
write.csv(Operacion_SQL, file = 'OperacionSQL.Proveedores')
write.csv(file = 'OperacionSQL.Proveedores')
write.csv(OperacionSQL.Proveedor, file = 'OperacionSQL.Proveedores')
write.csv(OperacionSQL.Proveedor, file = 'OperacionSQL.Proveedores.csv')
OperacionSQL.Clientes
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Importadores))
write.csv(OperacionSQL.Producto, file = 'OperacionSQL.Producto.csv')
OperacionSQL.Producto
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
OperacionSQL.Producto
OperacionSQL.Proveedor
diamonds
diamonds
OperacionSQL.Producto
states.data <- readRDS("dataSets/states.rds")
getwd()
states.data <- readRDS("dataSets/states.rds")
list.files()
states.data <- readRDS("states.rds")
states.data
OperacionSQL
OperacionSQL.Producto
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Ordenes = n_distinct(Id)
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
library(ggplot2)
library(dplyr)
library(modeest)
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Ordenes = n_distinct(Id)
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Ordenes = n_distinct(Id),
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
OperacionSQL.Producto
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
library(ggplot2)
head(mpg)
mpg<-mpg
vis <- ggplot(mpg, aes(manufacturer))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
summary(OperacionSQL)
summary(OperacionSQL.Producto)
head(mpg)
vis <- ggplot(OperacionSQL, aes(OperacionSQL$ProductName))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
vis <- ggplot(OperacionSQL.Producto, aes(ProductName))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
vis <- ggplot(OperacionSQL.Producto, aes(OperacionSQL.Producto$ProductName))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
peracionSQL.Producto$ProductName
OperacionSQL.Producto$ProductName
vis <- ggplot(OperacionSQL.Producto, aes(OperacionSQL.Producto$ProductName, OperacionSQL.Producto$Total))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
vis <- ggplot(OperacionSQL.Producto, aes(x = OperacionSQL.Producto$ProductName, y = OperacionSQL.Producto$Total))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
grafica1 <- ggplot(OperacionSQL.Producto, aes(OperacionSQL$Total))
grafica1
ggplot(data = mtcars) + geom_histogram(aes(x=qsec))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$ProductName))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(y=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto$ProductName) + geom_histogram(aes(y=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(y=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Total))
ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Total, bins=10)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Total, bins=10)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Total), bins=30)
grafica1
summary(OperacionSQL.Producto)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes y=OperacionSQL.Producto$Importadores, colour=OperacionSQL.Producto$ProductName))
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, y=OperacionSQL.Producto$Importadores, colour=OperacionSQL.Producto$ProductName))
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName))
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName, bin=30))
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName) bin=30)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName), bin=30)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName), bins=30)
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(y=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName), bins=30)
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes colour=OperacionSQL.Producto$ProductName), bins=30)
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName), bins=30)
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto) + geom_histogram(aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes, colour=OperacionSQL.Producto$ProductName))
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes)
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto), mapping = (aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes)
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Ordenes)))
grafica1
summary(OperacionSQL.Producto)
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Compradores)))
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$Ordenes, y=OperacionSQL.Producto$Compradores)))
grafica1
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$Ordenes, y=OperacionSQL.Producto$Compradores)))
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQL.Producto$ProductName))
grafica2
grafica1 <- ggplot(data = iris, mapping = (aes(x=iris$Sepal.Length, y=iris$Sepal.Width)))
grafica1
grafica1 <- ggplot(data = iris, mapping = (aes(y=iris$Sepal.Length, x=iris$Sepal.Width)))
grafica1
sample(x = 1:nrow(iris), size = 0.8*nrow(iris)
random <- sample(x = 1:nrow(iris), size = 0.8*nrow(iris))
random
iris_train <- iris[random, -5]
iris_train <- iris[]
predict <- knn
install.packages("ggplot2")
library(ggplot2)
diamonds <- as.data.frame(diamonds)
str(diamonds)
nrow(diamonds)*0.8
sample(x = 1:nrow(diamonds), size = 0.8*nrow(diamonds))
diamonds
random <- sample(x = 1:nrow(diamonds), size = 0.8*nrow(diamonds))
random
diamonds_train <- diamonds[random, Sesion_9_samples]
diamonds_train
diamonds <- select(diamonds$cut'')
diamonds <- diamondsfilter(['cut','depth','table','x','y','z'], axis=1)
diamonds_test <- diamonds[-random, Sesion_9_samples]
Sesion_9_samples <- c(5, 6, 8, 9, 10)
Sesion_9_cathegory <- 2
diamonds_cathegory_train <- diamonds[random, Sesion_9_cathegory]
diamonds_cathegory_test <- diamonds[-random, Sesion_9_cathegory]
diamonds_test
predict <- knn(train = diamonds_train,
test = diamonds_test,
cl = diamonds_cathegory_train,
k = 3)
predict
con_mat <-table(predict, diamonds_cathegory_test)
Diagonal <- diag(con_mat)
str(diamonds_cathegory_test)
con_mat
dim(con_mat)
Total_train <- colSums(con_mat, )
sum(Total_train)
sum(Diagonal)
Resultado_final <- sum(Diagonal)/sum(Total_train)*100
sum(Resultado_final)
install.packages("DBI")
Mydatabase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "Postwork",
host = "127.0.0.1",
username = "root",
password = "Ginette!986")
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
install.packages("odbc")
library(DBI)
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
install.packages("dbmss")
library(dbmss)
?dbConnect
data <- iris
data.sample <- sample(x = nrow(iris), size = 30)
data.sample2 <- sample(x = nrow(iris), size = 30)
data.sample3 <- sample(x = nrow(iris), size = 30)
data.sample4 <- sample(x = nrow(iris), size = 30)
data.sample5 <- sample(x = nrow(iris), size = 30)
data.sample6 <- sample(x = nrow(iris), size = 30)
data.sample7 <- sample(x = nrow(iris), size = 30)
data.sample8 <- sample(x = nrow(iris), size = 30)
data.sample9 <- sample(x = nrow(iris), size = 30)
data.sample10 <- sample(x = nrow(iris), size = 30)
data.sample
Media_Prework <- mean(data)
Media_Prework
dim(sample)
Sample_1 <- data[data.sample, 2]
mean(Sample_1)
Sample_2 <- data[data.sample3, 1]
mean(Sample_2)
str(data)
install.packages("boot")
OperacionSQL
OperacionSQL.Proveedor
library(ggplot2)
library(dplyr)
library(modeest)
OperacionSQL.Proveedor <- OperacionSQL %>%
group_by(Pais_de_Origen) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Importadores = n_distinct(Pais_Venta)) %>%
arrange(desc(Importadores))
OperacionSQL.Producto <- OperacionSQL %>%
group_by(ProductName) %>%
summarise(Total = sum(Total),
Unidades_vendidas = sum(Quantity),
Precio = sum(UnitPrice),
Ordenes = n_distinct(Id),
Importadores = n_distinct(Pais_Venta),
Compradores = n_distinct(Cliente),
Mayor_consumidor = mfv(Pais_Venta)) %>%
arrange(desc(Total))
library(ggplot2)
head(mpg)
mpg<-mpg
vis <- ggplot(OperacionSQL.Producto, aes(x = OperacionSQL.Producto$ProductName, y = OperacionSQL.Producto$Total))
vis + geom_bar(aes(fill=class), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
ggplot(data = OperacionSQL, aes)
OperacionSQL.Producto$ProductName
str(Operacion_SQL)
unique(Operacion_SQL$ProductName)
OperacionSQL.Producto
OperacionSQL.Proveedor
write.csv(OperacionSQL.Producto, file = 'OperacionSQL.Producto.csv')
diamonds
summary(OperacionSQL.Producto)
grafica1 <- ggplot(OperacionSQL.Producto, aes(OperacionSQL$Total))
grafica1
grafica1 <- ggplot(data = iris, aes(y=iris$Sepal.Length, x=iris$Sepal.Width)))
install.packages("ggplot2")
install.packages("DBI")
grafica1 <- ggplot(data = iris, aes(y=iris$Sepal.Length, x=iris$Sepal.Width))
grafica1
grafica2 <- grafica1 + geom_col(aes(color=iris$Species))
grafica2
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$Ordenes, y=OperacionSQL.Producto$Compradores)))
grafica1
OperacionSQL.ProductoII <- OperacionSQL.Producto[1]
OperacionSQL.ProductoII
OperacionSQL.ProductoII <- OperacionSQL.Producto[,20:60]
OperacionSQL.ProductoII <- OperacionSQL.Producto[20:60,]
OperacionSQL.ProductoII
grafica1 <- ggplot(data = OperacionSQL.ProductoII, mapping = (aes(x=OperacionSQL.ProductoII$Ordenes, y=OperacionSQL.ProductoII$Compradores)))
grafica1
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQLII.Producto$ProductName))
grafica2
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQL.ProductoII$ProductName))
grafica2
grafica1 <- ggplot(data = OperacionSQL.ProductoII, mapping = (aes(y=OperacionSQL.ProductoII$Total))
grafica1
)
grafica1 <- ggplot(data = OperacionSQL.ProductoII, mapping = (aes(y=OperacionSQL.ProductoII$Total)))
grafica1
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQL.ProductoII$ProductName))
grafica2
summary(OperacionSQL.Producto)
grafica1 <- ggplot(data = OperacionSQL.ProductoII, mapping = (aes(x=OperacionSQL.ProductoII$Mayor_consumidor y=OperacionSQL.ProductoII$Total)))
grafica1 <- ggplot(data = OperacionSQL.ProductoII, mapping = (aes(x=OperacionSQL.ProductoII$Mayor_consumidor, y=OperacionSQL.ProductoII$Total)))
grafica1
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQL.ProductoII$ProductName))
grafica2
grafica1 <- ggplot(data = OperacionSQL.Producto, mapping = (aes(x=OperacionSQL.Producto$Mayor_consumidor, y=OperacionSQL.Producto$Total)))
grafica1
grafica2 <- grafica1 + geom_col(aes(color=OperacionSQL.Producto$ProductName))
grafica2
ggsave(grafica2.png, width = 20, height = 20)
ggsave(grafica2, width = 20, height = 20)
last_plot()
grafica2.png <- grafica1 + geom_col(aes(color=OperacionSQL.Producto$ProductName))
ggsave(grafica2, width = 20, height = 20)
ggsave(grafica2.png, width = 20, height = 20)
plot(grafica2)
summary(OperacionSQL)
xa <- c(1, 2, 4, 5, 6, 9)
OperacionSQL.ggplot <- OperacionSQL[xa,]
OperacionSQL.ggplot
xa
OperacionSQL.ggplot <- OperacionSQL[,xa]
OperacionSQL.ggplot
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.Producto$ProductName, y=OperacionSQL.Producto$Pais_Venta)))
grafica1
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.ggplot$ProductName, y=OperacionSQL.ggplot$Pais_Venta)))
grafica1
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.ggplot$Pais_Venta, y=OperacionSQL.ggplot$ProductName)))
grafica1
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.ggplot$Pais_Venta, y=count(OperacionSQL.ggplot$Id))))
grafica1
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.ggplot$Pais_Venta, y=n_distinct(OperacionSQL.ggplot$Id))))
grafica1
grafica1 <- ggplot(data = OperacionSQL.ggplot, mapping = (aes(x=OperacionSQL.ggplot$Pais_Venta, y=1:n_distinct(OperacionSQL.ggplot$Id))))
grafica1
grafica2.png <- grafica1 + geom_col(aes(color=OperacionSQL.Producto$ProductName))
grafica2
